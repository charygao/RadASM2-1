[Description]
1=Solar Assembler

[CharTab]
2=0251222522222232;20-2F
3=1111111111242221;30-3F

[Open]
0="Assembly (*.asm;*.inc),*.asm;*.inc"
1="Resource Files (*.rc),*.rc"
2="Text Files (*.txt),*.txt"
3="All Files (*.*),*.*"
src="Assembly (*.asm),*.asm,asm"
hdr="Include (*.inc),*.inc,inc"
mod="Module (*.asm),*.asm,asm"

[CodeMacro]
;KeyWord,InsertBeforeActiveLine,InsertAfterActiveLine
;{I}=Copy indent from keyword line
;{C}=Cr
;{S}=Space
;{T}=Tab
;{$}=Copy Proc/Struct Name
;The macros are set up to assume AutoIndent on
1=.if,{T},{C}{I}.endif
2=.else,{T},
3=.elseif,{T},
4=.while,{T},{C}{I}.endw
5=macro,{T},{C}{I}endm
6=proc,{T}{C}{I}{T},{C}{I}{T}ret{C}{C}{I} endp
7=struct,{T},{C}{I} ends


[Code]
nASM=2
Code=endp,proc $
Const={C},$ equ, #define $
Data={C},$ db,$ dw,$ dd,$ dq,$ rb,$ rw,$ rd,$ rs,$ real4,$ real8,$ real10,$ fb,$ fw,$ fd,$ fq,$ fs
Macro=endm,macro $
Struct=ends,struc $,union
Struct2=endu,union
Union=endu,union
Label={C},$ :
Local={C},local $
Other=Enums,10
Enums=ende,enum $

[CodeBlock]
1=proc $,endp,,,4
2=.if,.endif,.elseif,.else,0
3=struc $,ends,,,4
4=macro $,endm,,,12
5=#ifdef,#endif,#else,,0
6=enum $,ende,,,4
7=union,endu,,,4
8=.repeat,.until,,,0
9=/*,*/,,,2

[Api]
Trig=invoke
Call=sol_asm\sol_ApiCall.api
Const=sol_asm\sol_ApiConst.api
Struct=sol_asm\sol_ApiStruct.api
Word=sol_asm\sol_ApiWord.api
Message=sol_asm\sol_Message.api
inc=include
lib=includelib

[Edit]
Font=Dina
FontHeight=-13
FontWeight=400
TabSize=8
Backup=0
AutoSave=0
BacupPath=$P\Bak\
AutoIndent=1
ApiList=1
ApiToolTip=1
Properties=1
MouseWheel=1
SaveSize=1
Maximize=1
ApiConst=1
CodeWrite=0
TabToSpc=0
FontCharSet=0
TxtFont=Courier New
TxtFontHeight=-13
TxtFontWeight=400
TxtFontCharSet=0
PrnFont=Courier New
PrnFontHeight=-12
PrnFontWeight=400
PrnFontCharSet=0
PrnOption=2,0,1,1,1
PrnColor=0,32768,8421504,255,65280,10485760,10485760,10485760,10485760,10485760,10485760,10485760,10485760,10485760,10485760,0,0,0,0,0,0
ApiStruct=1
ApiWordConv=1
ApiWordLocal=1
CodeFiles=.asm.inc.rc.tpl.rad.
FontItalic=0
TxtFontItalic=0
HexFont=Courier New
HexFontHeight=-12
HexFontWeight=400
HexFontItalic=0
HexFontCharSet=0
LnrFont=Dina
LnrFontHeight=-13
DlgFont=MS Sans Serif
DlgFontHeight=-11
DlgFontWeight=400
DlgFontItalic=0
DlgFontCharSet=0
ToolFont=Dina
ToolFontHeight=-13
ToolFontWeight=400
ToolFontItalic=0
ToolFontCharSet=0
PrnPage=8500,11000,500,500,500,500,0
ThreadBuild=1
ChangeNotify=1
MinimizeOnBuild=0
ApiShiftSpace=1
HiliteLine=0
HiliteCmnt=0
ProcsToApi=1
EnterOnTab=1
ProcInSBar=1
LnrWidth=4
LnrOnOpen=1
PageSize=64
OpenCollapsed=1
AutoBrackets=1
CodeTooltip=1

[Dialog]
Grid=1
GridX=3
GridY=3
SnapToGrid=1
ShowSize=1
SaveRC=1

[Error]
BookMark=1
nAsm=99
Identify=**Error**
Skip=1

[Paths]
$A=C:\sol_asm
$B=$A\bin
$D=$R\AddIns
$H=C:\refer\help\Win_32_API
$I=$A\Include
$L=$A\LIB
$M=$R\Tasm\Macro
$P=C:\my\work\prog\asm\sol
$S=$R\Tasm\Sniplets
$T=$R\Tasm\Templates
$E=C:\OllyDbg

[Project]
Type=Win32 App
Files=Asm,Inc,Rc,Def,Txt,Mak
Folders=Bak,Mod,Res
MenuMake=Compile RC,Assemble,Link,Build,Go,Run,Run w/debug,Go All,Assemble Modules
Group=1
GroupExpand=1

[MakeFiles]
0=.rap
1=.rc
2=.asm
3=.obj
4=.res
5=.exe
6=.def
7=.dll
8=.txt
9=.lib
10=.mak
11=.hla

[MakeDefNoProject]
MenuMake=1,1,1,1,1,1,1,1,0,0
1=rsrc.res,O,$B\brcc32.exe -r -i"$I" -v,rsrc.res
2=$.obj,O,sol_asm.exe /pe32 ,$.asm,$.exe
3=$.exe,O,$B\tlink32.EXE /x /V4.0 /Tpe /aa /c /L"$L",$.obj,|||||,rsrc.res
4=0,0,,$.exe
5=
6=*.obj,O,$B\tasm32.EXE /mx /m4 /z /q /zn  /I"$I",*.asm
7=0,0,\OllyDbg\OllyDbg,$.exe

[Win32 App]
Files=1,1,1,0,0
Folders=1,0,1
MenuMake=1,1,1,1,1,1,1,1,0,0
;x=FileToDelete/CheckExistsOnExit,
;(O)utput/(C)onsole/0,Command,
;MakeFile1[,MakeFile2[,MakeFile3...]]
1=4,O,$B\brcc32.exe -r -i"$I" -v,1
2=5,O,sol_asm.exe $2 $5 /pe32 /info 
3=5,O,$B\tlink32.EXE /x /V4.0 /Tpe /aa /c /L"$L",3,|||||,4
4=0,0,,5
5=
6=*.obj,O,$B\tasm32.EXE /mx /m4 /z /q /zn  /I"$I",*.asm
7=0,0,\OllyDbg\OllyDbg,5
11=4,O,$B\brcc32.exe -r -i"$I" -v,1
12=3,O,$B\tasm32.EXE /mx /m4 /z /q /zn  /I"$I",2
13=5,O,$B\tlink32.EXE /x /V4.0 /Tpe /aa /c /L"$L",3,|||||,4
14=0,0,,5
15=
16=*.obj,O,$B\tasm32.EXE /mx /m4 /z /q /zn  /I"$I",*.asm
17=0,0,\OllyDbg\OllyDbg,5

[MenuMake]
1=&Compile RC,372,M,1
2=&Assemble,116,M,2
3=&Link,1652,M,3
4=&Build,1396,M,2,3
5=-,0,M,
6=&Go,628,M,2,3,4
7=-,0,M,
8=&Run,884,M,4
9=Run w/&Debug,580,M,7
10=-,0,M,
11=Go &All,1140,M,1,2,3,4
12=-,0,M,
13=Assemble &Modules,0,M,6
Ver=100

[Color]
UseColor=1
Back=0
Fore=65535
Bar=8421376
Cmnt=12632256
Str=4227327
Oper=255
C0=16777088
C1=16777088
C2=16777088
C3=16777088
C4=16777088
C5=16777088
C6=16711935
C7=16711935
C8=16711935
C9=16711808
Output=0
Project=0
Property=0
Dialog=8421376
DivLine=1
NoFlicker=0
SelBack=12615680
SelText=16777215
Num=16777215
HiLine1=16711680
HiLine2=12615680
HiLine3=6052956
BarPen=8421504
LnrFontColor=16777215
Outputtext=16319
Projecttext=16776960
Propertytext=65535
C10=285147136
C11=16711680
C12=16711680
C13=16744576
C14=16744576
C15=16744576
CustColors=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

[KeyWords]
;Registers
C0=AH AL AX BH BL BP BX CH CL CR0 CR2 CR3 CS CX DH DI DL DR0 DR1 DR2 DR3 DR6 DR7 DS DX EAX EBP EBX ECX EDI EDX ES ESI ESP FS GS MM0 MM1 MM2 MM3 MM4 MM5 MM6 MM7 R10 R11 R12 R13 R14 R15 R8 R9 RAX RBP RBX RCX rdi RDX rsi RSP SI SP SS ST TR3 TR4 TR5 TR6 TR7 XMM0 XMM1 XMM2 XMM3
;Instructions
C1=AAA AAD AAM AAS ADC ADD AND CALL CBW CLC CLD CLI CMC CMP CMPS CMPSB CMPSW CWD DAA DAS DEC DIV ESC HLT IDIV IMUL IN INC INT INTO IRET IRETQ JA JAE JB JBE JC JCXZ JE JG JGE JL JLE JMP JNA JNAE JNB JNBE JNC JNE JNG JNGE JNL JNLE JNO JNP JNS JNZ JO JP JPE JPO JS JZ LAHF LDS LEA LES LODS LODSB LODSW LOOP LOOPE LOOPEW LOOPNE LOOPNEW LOOPNZ LOOPNZW LOOPW LOOPZ LOOPZW MOV MOVS MOVSB MOVSW MUL NEG NOP NOT OR OUT POP POPF PUSH PUSHF RCL RCR RET RETF RETN ROL ROR SAHF SAL SAR SBB SCAS SCASB SCASW SHL SHR STC STD STI STOS STOSB STOSW SUB TEST WAIT XCHG XLAT XLATB XOR
;Instructions
C2=ARPL BOUND BSF BSR BSWAP BT BTC BTR BTS CDQ CLTS CMPSD CMPXCHG CWDE ENTER INS INSB INSD INSW INVD INVLPG IRETD IRETDF IRETF JECXZ LAR LEAVE LFS LGDT LGS LIDT LLDT LMSW LOCK LODSD LOOPD LOOPED LOOPNED LOOPNZD LOOPZD LSL LSS LTR MOVSD MOVSX MOVZX OUTS OUTSB OUTSD OUTSW POPA POPAD POPFD PUSHA PUSHAD PUSHD PUSHFD PUSHW REP REPE REPNE REPNZ REPZ SCASD SETA SETAE SETB SETBE SETC SETE SETG SETGE SETL SETLE SETNA SETNAE SETNB SETNBE SETNC SETNE SETNG SETNGE SETNL SETNLE SETNO SETNP SETNS SETNZ SETO SETP SETPE SETPO SETS SETZ SGDT SHLD SHRD SIDT SLDT SMSW STOSD STR VERR VERW WBINVD XADD
;FPU Instructions
C3=F2XM1 FABS FADD FADDP FBLD FBSTP FCHS FCLEX FCOM FCOMP FCOMPP FCOS FDECSTP FDISI FDIV FDIVP FDIVR FDIVRP FENI FFREE FIADD FICOM FICOMP FIDIV FIDIVR FILD FIMUL FINCSTP FINIT FIST FISTP FISUB FISUBR FLD FLD1 FLDCW FLDENV FLDENVD FLDENVW FLDL2E FLDL2T FLDLG2 FLDLN2 FLDPI FLDZ FMUL FMULP FNCLEX FNDISI FNENI FNINIT FNOP FNSAVE FNSAVED FNSAVEW FNSTCW FNSTENV FNSTENVD FNSTENVW FNSTSW FPATAN FPREM FPREM1 FPTAN FRNDINT FRSTOR FRSTORD FRSTORW FSAVE FSAVED FSAVEW FSCALE FSETPM FSIN FSINCOS FSQRT FST FSTCW FSTENV FSTENVD FSTENVW FSTP FSTSW FSUB FSUBP FSUBR FSUBRP FTST FUCOM FUCOMP FUCOMPP FWAIT FXAM FXCH FXTRACT FYL2X FYL2XP1
;MMX Instructions
C4=EMMS MOVD MOVQ PACKSSDW PACKSSWB PACKUSWB PADDB PADDD PADDSB PADDSW PADDUSB PADDUSW PADDW PAND PANDN PCMPEQB PCMPEQD PCMPEQW PCMPGTB PCMPGTD PCMPGTW PMADDWD PMULHW PMULLW POR PSLLD PSLLQ PSLLW PSRAD PSRAW PSRLD PSRLQ PSRLW PSUBB PSUBD PSUBSB PSUBSW PSUBUSB PSUBUSW PSUBW PUNPCKHBW PUNPCKHDQ PUNPCKHWD PUNPCKLBW PUNPCKLDQ PUNPCKLWD PXOR
;XMM/K3D Instructions
C5=
;
C6=$ ? @@ @B @F ADDR BASIC BYTE C CARRY? cdecl DWORD FAR FAR16 FORTRAN FWORD NEAR NEAR16 OVERFLOW? OWORD PARITY? PASCAL QWORD REAL10 REAL4 REAL8 SBYTE SDWORD SIGN? STDCALL SWORD SYSCALL TBYTE VARARG WORD ZERO?
;MASM Keywords (non-code producing)
C7=#else #endif #ifdef %OUT .186 .286 .286C .286P .287 .386 .386C .386P .387 .486 .486P .586 .686 .686p .8086 .8087 .ALPHA .CODE .CONST .CREF .DATA .DATA? .DOSSEG .ERR .ERR1 .ERR2 .ERRB .ERRDEF .ERRDIF .ERRDIFI .ERRE .ERRIDN .ERRIDNI .ERRNB .ERRNDEF .ERRNZ .EXIT .FARDATA .FARDATA? .K3D .LALL .LFCOND .LIST .LISTALL .LISTIF .LISTMACRO .LISTMACROALL .MMX .MODEL .MSFLOAT .NO87 .NOCREF .NOLIST .NOLISTIF .NOLISTMACRO .RADIX .SALL .SEQ .SFCOND .STACK .STARTUP .string .TFCOND .TYPE .XALL .XCREF .XLIST .XMM ALIAS ALIGN ASSUME BEGIN CATSTR COMM COMMENT DB DD DF DOSSEG DQ DT DUP DW ECHO ELSE ELSEIF ELSEIF1 ELSEIF2 ELSEIFB ELSEIFDEF ELSEIFDIF ELSEIFDIFI ELSEIFE ELSEIFIDN ELSEIFIDNI ELSEIFNB ELSEIFNDEF END ENDIF ENDM ENDP ENDS endu endw EQ EQU EVEN EXITM EXTERN EXTERNDEF EXTRN FB FD FOR FORC FQ FS FW GE GOTO GROUP GT HIGH HIGHWORD IF IF1 IF2 IFB IFDEF IFDIF IFDIFI IFE IFIDN IFIDNI IFNB IFNDEF incbin INCLUDE INCLUDELIB INSTR IRP IRPC LABEL LE LENGTH LENGTHOF LOCAL LOW LOWWORD LROFFSET LT MACRO MARG MASK MOD NAME NE OFFSET OPATTR OPTION ORG PAGE POPCONTEXT PROC PROTO PTR PUBLIC PURGE PUSHCONTEXT RB RD RECORD REPEAT REPT RS RW SEG SEGMENT SHORT SIZE SIZEOF SIZESTR STRUC STRUCT SUBSTR SUBTITLE SUBTTL TEXTEQU THIS TITLE TYPEDEF UNION WHILE WIDTH
;MASM High Level Key Words (code producing)
C8=.and .BREAK .CONTINUE .ELSE .ELSEIF .ENDIF .ENDW .IF .or .REPEAT .UNTIL .UNTILCXZ .WHILE ARG ende enum INVOKE noframe signed swap USES
;CaseSensitive Macro Ops
C9=@CatStr @code @CodeSize @Cpu @CurSeg @data @DataSize @Date @Environ @fardata @fardata? @FileCur @FileName @InStr @Interface @Line @Model @SizeStr @stack @SubStr @Time @Version @WordSize
C10=
C16=
C11=
C12=
C13=
C14=
C15=

[ReallyRad]
AddDlg=1
AddMnu=1
AddRes=1
AddVer=1
AddStr=1
AddFile=1
AddFolder=1
CtlClk=1
MnuSel=1
CtlNme=1
AddAclRc=1
AddResRc=1
AddStrRc=1
AddVerRc=1
AddLngRc=1
ModBuild=1
[MenuMacro]
Ver=100
[Group]
Group=Added files,Assembly,Resources,Misc,Modules
